Guillaume HARTMANN
guillaume.hartmann@imt-atlantique.net

Projet : Microsoft visual code

https://github.com/Microsoft/vscode

Tout d abord, ce projet est bien un projet libre car il possede la licence MIT qui est bien une licence libre (elle est bien recensee sur le site Opensource.org/licence)

Gouvernance : La gouvernance du projet est relativement clair mais le nombre de participants au projet peut etre tres important. En effet, c est l entreprise Microsoft qui est a l origine de ce projet et qui a lance le projet mais tout le monde peut participer au projet selon certaines conditions. Ainsi, une page entiere est dediee a la maniere de pouvoir contribuer au projet et les normes a respecter. Il est ainsi demande de lire la page « Code of Conduct » pour pouvoir travailler de maniere conforme a ce qui a deja ete fait auparavant. Ainsi, Microsoft encourage tous les developpeurs a participer a leur projet a condition que ces derniers suivent bien les normes definies par l entreprise. La page wiki du projet explique tout cela. Ainsi, il est conseille pour de nouveaux developpeurs voulant participer au projet (apres avoir clone et cree le repo) de lire la liste des problemes (issues list) et de repondre a l un de ces derniers. Il est aussi precise les prerequis qu il faut pour pouvoir contribuer au projet. Ces prerequis sont lies a certains logiciels qu il faut avoir sur son ordinateur personnel pour pouvoir lancer et tester le logiciel et ainsi comprendre son fonctionnement. Cela limite donc le nombre de collaborateurs qui peuvent participer au projet, puisqu il faut au prealable maitriser ces logiciels. 
Enfin une partie explique ce qu il faut faire pour qu une « pull request » puisse etre acceptee. Il faut dans un premier temps signer la « Contributor License Agreement » une premiere fois. Cela permet d assurer au createur du projet (Microsoft) que tous les contributeurs lui permettent d avoir tous les droits sur leur contribution et que le createur du projet peut le distribuer sous la licence qu il souhaite. 
Il est aussi precise de ne creer qu une pull request par issue et de mettre le lien vers l issue dans la pull request. Il est bien sur precise de suivre le « Coding guidelines » pour que les modifications soient conformes au reste du projet. 
Enfin, il est precise pourquoi une pull request pourrait ne pas etre accepte : soit parce que cela ne repond pas aux exigences de performance, soit parce que cela rend trop lourd le projet (l editeur de code doit etre leger) soit parce que cela a un impact sur l architecture du projet et que le proprietaire n est pas en accord avec ses changements. Il est aussi precise qu il est conseille de travailler sur un probleme marque comme « help-wanted » ou « bug ».
Pour resumer, le contributeur principal reste Microsoft donc une entreprise et ses equipes de developpeurs et d ingenieurs mais aussi des individus, des particuliers volontaires qui, s ils suivent les regles dictees, peuvent contribuer au projet. Ceci reste un projet professionnel. C est donc les ingenieurs de Microsoft qui peuvent « merged » une « pull request ».
On peut noter qu il y a eu 434 personnes qui ont fait au moins un commit avec des personnes tres actives ayant fait plus de 3825 commits comme bpasero qui est un ingenieur de chez Microsoft mais aussi des personnes tres peu actives comme lucaslra qui a fait 3 commits et qui est un particulier ne travaillant pas chez Microsoft. Ainsi, les contributeurs sont bien des personnes de chez Microsoft mais aussi des particuliers voulant participer au projet.

Histoire : Le projet a ete presente pour la premiere fois en avril 2015 par Microsoft et a ete cree sur GIT le 03 septembre 2015 par Microsoft. Ce projet est donc relativement recent (2 ans). Visual Studio code est un editeur de texte et de code source qui est disponible sur Linux, Mac et Microsoft. Ceci est assez inhabituel pour Microsoft qui n a jamais reussi a faire emerger un logiciel open source. On peut expliquer la motivation de Microsoft pour ce projet par l envie de se racheter une image aupres des developpeurs, notamment les developpeurs Java, javascript, PHP, … En effet, ce projet ne va pas directement permettre a Microsoft un gain monetaire important (le logiciel est gratuit). 
Ce logiciel integre la plupart des fonctionnalites de base d un editeur de texte comme la coloration syntaxique personnalisable ou bien encore l auto-completions, un systeme de plugins, … C est un projet qui est tres actif car par exemple il avait ete mis a jour le 23 novembre 2017 a 16H30, et il est regulierement mis a jour (tous les jours en general).  
Microsoft presente VS Code comme un nouveau type d outil qui combine la simplicite d un editeur de texte avec ce que les developpeurs ont besoin pour le cycle d edition, construction, debogage. Cela permet une prise en charge complete de l edition et du deboggage et une integration legere avec les outils existants.  
Le projet a beaucoup evolue et Microsoft suit les avis et demandes d evolutions exprimees par les utilisateurs. Ainsi, on a pu voir il y a quelques semaines l ajout par Microsoft de la notion d espace de travail.
Aujourd hui VS Code est en tete des projets avec le plus grand nombre de contributeurs sur GitHub en comprenant les plugins associes.  

Mode contributif :

Exemple de contribution : 

Succes : - https://github.com/Microsoft/vscode/pull/9966
Ce premier exemple de contribution est tres interessant car il montre bien le processus qu il faut effectuer pour contribuer a un projet libre. En effet, dans un premier temps la personne Meai1 a remarque qu une chose pouvait etre ameliore dans le programme. Cette chose est qu a un endroit une erreur etait retournee mais que cette erreur n etait pas precise du tout. Il a ainsi propose de travaille sur cela pour permettre de retourner des messages d erreurs qui seraient plus utiles et comprehensibles. Un robot de Microsoft a d abord repondu a cette personne la remerciant pour sa contribution et lui expliquant qu un humain allait etudier sa contribution. Kieferrm a donc assigne le probleme a weinand qui la lui-meme assigne a isidorn (ingenieur chez Microsoft). Isidorn a alors repondu et a explique a l auteur de la modification qu il n avait pas exactement respecte les conventions du projet et qu il fallait qu il change un nom de variable s il voulait que sa contribution soit merged. Ce dernier la alors fait (il n a pas repondu directement au message, cela aurait peut-etre ete plus cordiale de repondre au message au vu du processus de collaboration a un projet libre). Isidorn a au final fini par merged la production. Cet exemple est interessant car il montre un echange entre un particulier et un des auteurs du projet, cela montre aussi qu il faut bien suivre les normes du projet si l on veut que notre contribution soit acceptee. Cela montre aussi un dialogue entre un particulier et un ingenieur travaillant specifiquement sur le projet.
- https://github.com/Microsoft/vscode/pull/38655
Ceci est une autre contribution a ce projet. Cette fois-ci ce n est pas un particulier qui a trouve une erreur mais une personne qui travaille chez Microsoft (mjbvz). Cet exemple est aussi interessant car mjbvz explique le bug trouve (quand on clique pour accepter une suggestion, elle peut ne pas encore avoir ete resolu) puis ce qu il faut pour que le bug soit fixe (etre sur que l on resout le probleme apres avoir clique). Il a alors propose une modification. Il s est ensuite auto-assigne pour resoudre ce probleme puis a demande une relecture de jrieken (un autre ingenieur de chez Microsoft) pour surement etre sur que sa modification etait correcte. Ce dernier lui a repondu en lui disant que cela etait bien et a alors merged la contribution.
Ces deux exemples sont interessants car il montre deux modes de contribution differente : soit pour un particulier soit pour un professionnel travaillant pour Microsoft.  Dans les deux cas cela a permis de corriger un probleme et donc de faire avancer le projet. 

Echec : - https://github.com/Microsoft/vscode/pull/38332
Cette contribution visait a rectifier une traduction chinoise qui avait ete faite dans le fichier Node.js. Cependant, cette contribution n a pas ete merged car elle ne suit pas les regles du projet. En effet, un developpeur de chez Microsoft a repondu que les ameliorations de traduction ne devaient pas venir directement du code mais de « Transifex » qui est une autre partie. Ainsi, l ingenieur de Microsoft a clos la discussion et a refuse la modification. L erreur qui a ete commise par cette personne est interessante car elle montre qu il faut bien respecter les normes et la maniere dont un projet fonctionne pour pouvoir y contribuer. A noter que cela est une contribution qui est a l initiative du particulier qui a voulu faire la modification car il pensait avoir trouve une erreur, mais ce n est pas Microsoft qui avait demande de se pencher sur cette question. Avant de vouloir corriger une erreur, il faut bien verifier que cela est effectivement une erreur et comment et ou reparer cette erreur si c est le cas. 
